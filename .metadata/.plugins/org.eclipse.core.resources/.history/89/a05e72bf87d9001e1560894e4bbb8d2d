package com.example.practice.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.example.practice.entity.NonUserEntity;
import com.example.practice.entity.UserEntity;
import com.example.practice.model.Member;
import com.example.practice.model.NonUser;
import com.example.practice.model.User;
import com.example.practice.repository.NonUserRepository;
import com.example.practice.repository.UserRepository;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequiredArgsConstructor
@Service
public class NonUserService {
	
	private final NonUserRepository nonUserRepository;
	
	/*회원가입*/
	@Transactional
	public void create(NonUser nonUser) {
		
//	Member memberStatus = Member.NonMember; // 기본값을 MEMBER로 설정

		NonUserEntity nonUserEntity = NonUserEntity.builder()
				.id(nonUser.getId())
				.email(nonUser.getEmail())
				.tel(nonUser.getTel())
				.build();
		nonUserRepository.save(nonUserEntity);
	}
	
	/*이메일로 회원조회(회원가입 아이디 중복방지)*/
	public NonUser findByEmail(String email){
		Optional<NonUserEntity> nonUserEntity = nonUserRepository.findByEmail(email);
		
		if(nonUserEntity.isPresent()) {
			return	nonUserEntity.get().toNonUser(); 
		}
		return null;
	}
	
	/*이메일로 회원조회(회원가입 아이디 중복방지)*/
	public NonUser findById(Long Id){
		Optional<NonUserEntity> nonUserEntity = nonUserRepository.findById(Id);
		
		if(nonUserEntity.isPresent()) {
			return	nonUserEntity.get().toNonUser(); 
		}
		return null;
	}
	

}
