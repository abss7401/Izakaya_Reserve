package com.example.practice.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.example.practice.entity.ReserveEntity;
import com.example.practice.entity.UserEntity;
import com.example.practice.model.Member;
import com.example.practice.model.Reserve;
import com.example.practice.repository.ReserveRepository;
import com.example.practice.repository.UserRepository;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@Service
public class ReserveService {
	private final ReserveRepository reserveRepository;
	private final UserRepository userRepository;
	
	/*예약하기*/
	@Transactional
	public void create(Reserve reserve) {
		Optional<UserEntity> byId = userRepository.findById(reserve.getUser().getId());
		
		if(byId.isPresent()) {
			UserEntity userEntity = byId.get();
			
			ReserveEntity reserveEntity = ReserveEntity.builder()
					.id(reserve.getId())
					.user(userEntity)
					.person(reserve.getPerson())
					.date(reserve.getDate())
					.time(reserve.getTime())
					.member(userEntity.getMember())
					.build();				
			
			reserveRepository.save(reserveEntity);
		}
	}

	
	/*날짜에 해당하는 예약조회*/
	public List<Reserve> findAllReserve(String date) { 
		List<ReserveEntity> byDate = reserveRepository.findByDate(date);
		List<Reserve> reserveList = new ArrayList<>();
		for(ReserveEntity reserveEntity : byDate) {
			reserveList.add(reserveEntity.toReserve());
		}
		return reserveList;
	}
}
